name: Cross Platform Release

permissions:
  contents: write
  packages: write

on:
  push:
    tags:
      - "*"

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: "linux-amd64"
            os: "ubuntu-latest"
            platform: "linux/amd64"

          - name: "windows-amd64"
            os: "windows-latest"
            platform: "windows/amd64"

          - name: "darwin-universal"
            os: "macos-latest"
            platform: "darwin/universal"

          - name: "darwin-arm64"
            os: "macos-latest"
            platform: "darwin/arm64"

          - name: "darwin-amd64"
            os: "macos-latest"
            platform: "darwin/amd64"

    name: ${{ matrix.build.name }}
    runs-on: ${{ matrix.build.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Build Wails App
        uses: dAppServer/wails-build-action@main
        id: build
        with:
          build-name: tsdoa
          build-platform: ${{ matrix.build.platform }}
          package: false
          nsis: ${{ matrix.build.platform == 'windows/amd64' }}
          go-version: "1.24"

      - name: Linux Packaging
        if: ${{ matrix.build.platform == 'linux/amd64' }}
        run: |
          chmod +x ./linux-packages.sh
          ./linux-packages.sh

      - name: Rename macos
        if: startsWith(matrix.build.platform, 'darwin/')
        run: |
          mv ./build/bin/tsdoa.app.zip ./build/bin/tsdoa-${{ matrix.build.name }}.app.zip
          mv ./build/bin/tsdoa.pkg ./build/bin/tsdoa-${{ matrix.build.name }}.pkg

      - name: Rename windows
        if: ${{ matrix.build.platform == 'windows/amd64' }}
        shell: pwsh
        run: |
          Rename-Item -Path ".\build\bin\tsdoa-amd64-installer.exe" -NewName "tsdoa-${{ matrix.build.name }}-installer.exe"

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tsdoa-${{ matrix.build.name }}
          path: |
            ./build/bin/tsdoa-${{ matrix.build.name }}.pkg
            ./build/bin/tsdoa-${{ matrix.build.name }}.app.zip
            ./build/bin/tsdoa-${{ matrix.build.name }}-installer.exe
            ./dist/*

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts
          merge-multiple: true

      - name: List downloaded artifacts
        run: |
          echo "Artifacts downloaded:"
          find release-artifacts/**/*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: release-artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
